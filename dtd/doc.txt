This project was developed by Luca Mannella for the Assignment 1 of the course Distributed Programming II in Politechnic University of Turin.

My DTD is an implementation of a Workflow Management System.
The root is called "WorkflowManager" it does not have any attribute and it can contains "workflow", "process" and "actors".


In our system we have a workflow that is a representation of a set of actions that an actor can perform.
The "workflow" is characterized by an ID field called name, which uniquely identifies it, and 1 or more "action"s.

Every action has the required actor's role and a name, which must be unique within the workflow. 
For reach this target I create a CDATA field called name that conains just the name of the action and an ID field composed in this way: "WorkflowName_ActionName".
In this way I'm able to assign the same name to various action but keeping the name of the action unique inside its workflow.

There are two different types of actions: simple actions and process actions.
A "simple_action" has a pointer (IDREFS) to a set of actions that could be performed after the end of that particular action.
A "process_action" corresponds to the execution of a whole process so they are characterized by a pointer (IDREF) to the name of the nested workflow that they will execute.


A process is an instance of a particular workflow so it has a pointer (IDREF) to the relative "workflow" entity a CDATA that represents its starting time and an ID which uniquely identifies it.
Even if this feature is not required by the specification I think that could be usefull for a future expansion of the application (for example could be usefull inside a Database).

Every process can contains 1 or more "action_status".
An action_status is an instance of a particular action contained inside the workflow that is represented by the process to whom this action belongs to.
An action_status status has a pointer (IDREF) to the relative "action", another pointer (IDREF) to the actor that must complete them (is implied because the action could not be associated to nobody) and a CDATA that could represent the timestamp in which the action was completed or the status "Not Finished" or "Not Taken".


The last element of the "WorkflowManager" is the element "actors" that is a container for the elements "actor".
The element "actors" has an ID field (deparment) that is IMPLIED. That field could be used to divide the actors in different groups called deparments.
This is not a text specification but I think that it could be usefull to a more complex application.

An "actor" is characterized by a name, which uniquely identifies it (ID), and a role that is simply a string (CDATA).
I choose to represent also the "actors" like entities because I think that could be a good way for having a program easy to extend to new features.

If an actor was assigned to an action_status with a role that is not equal to the role of the actor an exception was raised at runtime.